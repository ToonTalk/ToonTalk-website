<html>

<head>
<meta HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1252">
<meta NAME="GENERATOR" CONTENT="Microsoft FrontPage 5.0">
<meta NAME="Version" CONTENT="8.0.4308">
<meta NAME="Date" CONTENT="7/8/97">
<meta NAME="Template" CONTENT="C:\Program Files\Microsoft Office\Office\HTML.DOT">
<title>Abstract -- From Prolog and Zelda to ToonTalk</title>
</head>

<body TEXT="#000000" LINK="#0000ff" BGCOLOR="#ffffff">
<b><font FACE="Arial" SIZE="4">

<p ALIGN="CENTER"></font><font FACE="Arial" size="5">From Prolog and Zelda to ToonTalk</font><font size="5" face="Comic Sans MS"> </font>
<OBJECT id=AgentControl codeBase=#VERSION=2,0,0,0 classid=clsid:D45FD31B-5C6E-11D1-9EC1-00C04FD7081F VIEWASTEXT></OBJECT>

<SCRIPT language=javascript src="../agent.js"></SCRIPT>
<SCRIPT language=javascript src="strings.js"></SCRIPT>
<SCRIPT language=JavaScript event="Click(CharacterID, Button, Shift, X, Y)" for=AgentControl> 

<!-- 

reactToAgentClicked(CharacterID, Button, Shift, X, Y); 

--> </SCRIPT><SCRIPT language=JavaScript event=IdleStart(CharacterID) for=AgentControl> 

<!-- 

idleAgent(CharacterID); 

--> 

</SCRIPT>
<INPUT onclick=agentStart() type=image alt="Peedy can read this page for you." src="../reading.gif" name=Image1 width="58" height="51"></p>
</b>

<font
FACE="Arial" SIZE="4">

<p ALIGN="CENTER"><a HREF="mailto:KenKahn@toontalk.com">KenKahn@toontalk.com</a></p>

</font><font face="Arial" size="3">

<p ALIGN="left">This paper  appeared in the <i>Proceedings of the International
Conference on Logic Programming</i> 1999,
edited by Danny De Schreye, MIT Press, 1999.</p>

<p>Keywords: animated programming, logic programming, concurrent constraint programming</font><font
FACE="Arial" SIZE="4"></p>
<i><b>

<p align="left">Abstract</p>
</b></i></font><font face="Arial" size="3">

<p ALIGN="JUSTIFY">&nbsp;&nbsp;&nbsp; <em><a href="../toontalk.html">ToonTalk</a> looks
like a video game. This is not surprising since its design and user interface were
strongly influenced by games like The Legend of Zelda: A Link to the Past and Robot
Odyssey. What may be more surprising is that ToonTalk is a programming language and
environment based upon ideas that have evolved from Prolog over a period of nearly twenty
years. <br>
&nbsp;&nbsp;&nbsp; ToonTalk is a synthesis of ideas from concurrent constraint
programming, video games, and programming languages for children. In the spirit of Logo,
ToonTalk is an attempt to take the best ideas in computer science and make them accessible
to children. When Logo was designed over thirty years ago, the best programming language
ideas could be found in the Lisp language. The design of ToonTalk is based upon the belief
that the best programming language ideas can be found in concurrent logic programming and
concurrent constraint programming languages like Janus, Linear Janus, FGHC, Vulcan, DOC,
AKL, and Oz. These languages, in turn, borrow heavily from earlier languages like
Concurrent Prolog and Parlog that in turn grew out of research on Prolog.<br>
&nbsp;&nbsp;&nbsp; While these languages have many desirable aspects - they are powerful,
elegant, theoretically well grounded, and expressive - they are not generally considered
easy to learn. If it takes substantial time and effort for computer scientists to
understand one of these languages, then how can one hope to make the underlying ideas
accessible to young school children?<br>
An answer lies with video games. Many of these games present a large and complex world
with many kinds of objects and possible actions. And yet, children as young as 4 years old
learn to master these game worlds without help. The fundamental idea underlying ToonTalk
is that a game world can be created in which the objects and actions map directly onto
programming language constructs. In ToonTalk, a clause becomes a robot, a term or tuple
becomes a box, a number becomes a pad, and so on. The act of putting a box and a team of
robots into a truck becomes a way of expressing a process spawn or procedure call. The act
of dropping a number pad on another number pad becomes a way of expressing an arithmetic
operation. And so on.</em></p>

<p ALIGN="JUSTIFY">Download the entire paper as an <a href="http://www.toontalk.com/Papers/iclp99.pdf">Adobe Acrobat file 
  (PDF)</a>&nbsp; - 1.75MB</p>
</font>

<p id="DontRead" align="center"><small><font face="Comic Sans MS"><a href="toontalk.htm">home</a> | <a href="search.htm">search</a> | <a href="buy.htm">purchase</a> | <a href="doc.htm">manual</a>
| <a href="whatsnew.htm">news</a> | <a href="infodesk.htm">info</a> | <a href="games.htm">games</a>
| <a href="faq.htm">faq</a> | <a href="support.htm">support</a> | <a href="free.htm">downloads</a>
| <a href="endorse.htm">endorsements</a> | <a href="press.htm">press</a> | <a href="address.htm">contact us</a></font></small></p>

</body>
</html>