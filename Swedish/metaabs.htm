<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 5.0">
<title>Metaphor Design -- abstract of paper</title>
</head>

<body bgcolor="#FFFFFF" text="#000000">

<p align="center"><font size="4">Metaphor Design - Case Study of An Animated Programming
Environment </font></p>

<p align="center">Ken Kahn<i> </i></p>

<p align="left">
<em style="font-style: normal">

This paper was published in the </em>
<em>

Proceedings of the 1995 Computer Game Developers Conference</em><em style="font-style: normal">.</em> </p>

<p><i>There are many examples of bad use of metaphors in interfaces, for example,
requiring users to put an icon for the floppy drive into the trash can icon to eject a
floppy on a Macintosh. Good designs should use metaphors predictably and consistently; for
entertainment software the metaphor elements should also be fun. </i> </p>

<p><i>I discuss the history and rationale of the metaphor design of my ToonTalk system --
an animated programming environment for kids. For example, I needed to provide the user
with the ability to copy, remove, restore, grow and shrink items. The first design used
three different colored magic wands. The wands were further distinguished by displaying an
abstract animation of their function. Preliminary informal user studies showed that this
scheme was non-obvious and users got the wands confused despite the animation. Because of
this I replaced the size changing wand with a bike pump and the removing and restoring
wand by a hand-held vacuum. Other examples of ToonTalk metaphors discussed are the use of
carrier pigeons for communication, cities on the back of pictures for sprite programming,
and a mouse with a big hammer for arithmetic. </i> </p>

<p>Download the entire paper as an <a href="http://www.toontalk.com/Papers/cgdc.pdf">Adobe Acrobat file (PDF)</a>&nbsp; 
  - 178KB</p>

<p id="DontRead" align="center"><small><font face="Comic Sans MS"><a href="toontalk.htm">
home</a> | <a href="search.htm">search</a> | <a href="buy.htm">purchase</a> | <a href="doc.htm">
manual</a> | <a href="whatsnew.htm">news</a> | <a href="infodesk.htm">info</a> | <a href="games.htm">
games</a> | <a href="faq.htm">faq</a> | <a href="support.htm">support</a> | <a href="free.htm">
downloads</a> | <a href="endorse.htm">endorsements</a> | <a href="press.htm">
press</a> | <a href="address.htm">contact us</a></font></small></p><p id="DontRead" align="center"><b><font FACE="Comic Sans MS" SIZE="5">

<object id="AgentControl" codeBase="#VERSION=2,0,0,0" classid="clsid:D45FD31B-5C6E-11D1-9EC1-00C04FD7081F" VIEWASTEXT>
</object>
<script language="javascript" src="../agent.js"></script>
<script language="javascript" src="strings.js">
</script>
<script language="JavaScript" event="Click(CharacterID, Button, Shift, X, Y)" for="AgentControl"> 

<!-- 

reactToAgentClicked(CharacterID, Button, Shift, X, Y); 

--> </script>
<script language="JavaScript" event="IdleStart(CharacterID)" for="AgentControl"> 

<!-- 

idleAgent(CharacterID); 

--> 

</script>
<input onclick="agentStart()" type="image" alt="Peedy can read this page for you." src="../reading.gif" name="Image1" width="58" height="51"></font></b></p>

</body>
</html>