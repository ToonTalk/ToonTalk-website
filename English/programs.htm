<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name="Template" content="C:\Program Files\Microsoft Office\Office\HTML.DOT">
<meta name="GENERATOR" content="Microsoft FrontPage 5.0">
<title>ToonTalk programs</title>
</head>

<body bgcolor="#FFFFFF" text="#000000" link="#0000FF" vlink="#800080">

<p align="center"><font size="5" face="Comic Sans MS"><b>Free ToonTalk Programs for
Downloading </b></font>
<OBJECT id=AgentControl codeBase=#VERSION=2,0,0,0 classid=clsid:D45FD31B-5C6E-11D1-9EC1-00C04FD7081F VIEWASTEXT></OBJECT>

<SCRIPT language=javascript src="../agent.js"></SCRIPT>
<SCRIPT language=javascript src="strings.js"></SCRIPT>
<SCRIPT language=JavaScript event="Click(CharacterID, Button, Shift, X, Y)" for=AgentControl> 

<!-- 

reactToAgentClicked(CharacterID, Button, Shift, X, Y); 

--> </SCRIPT><SCRIPT language=JavaScript event=IdleStart(CharacterID) for=AgentControl> 

<!-- 

idleAgent(CharacterID); 

--> 

</SCRIPT>
<INPUT onclick=agentStart() type=image alt="Peedy can read this page for you." src="../reading.gif" name=Image1 width="58" height="51"></p>

<p><font face="Comic Sans MS" size="3">If you are reading this on your local disk or on
the ToonTalk CD-ROM and have an Internet connection then <a
href="http://www.toontalk.com/English/programs.htm">click here</a> for the latest version
of this page.</font></p>

<p><font face="Comic Sans MS" size="3">Here is where you can find programs that others
have constructed in ToonTalk. These programs are free and can be freely distributed but
you can't sell them for profit. </font></p>

<p><font face="Comic Sans MS" size="3">If you build something nice in ToonTalk, please
contribute it to the world by <a href="contrib.htm">following these instructions</a>. </font></p>

<p><font face="Comic Sans MS" size="3">There are plenty of ToonTalk games you can run in
ToonTalk version 2.35 or Beta 27 or later
<a href="http://www.ioe.ac.uk/playground/gameplace/index.html">here</a>.</font></p>

<p><font face="Comic Sans MS" size="3">Here are some more programs. </font>

<dl>
  <dt><small><a name="Primes"></a></small><font face="Comic Sans MS" size="3"><a
    href="../primes.tt">Generates prime numbers</a>. </font></dt>
  <dd><font face="Comic Sans MS" size="3">This is a notebook of robots that implement the
    Sieve of Erathosthenes. The best way to watch it to give the robot on page 2 a box with a
    bird in it and press F8 to stop all robots. Then get in the helicopter, press F8 to start
    them up again, and watch as first a house is built with a robot inside that gives a bird a
    2, then 3, 4, 5 and so on. The bird takes it to her nest in a new house that has robots in
    it that passes along only numbers divisible by 2. When a number passes through all the
    existing houses then it is a prime and a new house is built filtering out numbers
    divisible by it. </font></dd>
  <dt><small><a name="SingleFactorial"></a></small><font face="Comic Sans MS" size="3"><a
    href="../fact.tt">Recursive factorial</a>. </font></dt>
  <dd><font face="Comic Sans MS" size="3">This is a notebook of robots that compute the
    product of numbers from 1 to n in a recursive fashion. One of the built-in demos of
    ToonTalk shows how to build an iterative factorial program. Those robots can be found in
    the <i>Examples</i> notebook on page 6 of your main notebook. This one is fun to watch
    from the outside. (Computer scientists should be able to recognize the stack from the
    helicopter.) </font></dd>
  <dt><small><a name="DoubleFactorial"></a></small><font face="Comic Sans MS" size="3"><a
    href="../dfact.tt">Doubly recursive factorial.</a> </font></dt>
  <dd><font face="Comic Sans MS" size="3">This computes the same values as the singly
    recursive version above, but if you watch from the outside you'll see a tree of houses
    grow and shrink. To see the pattern well, the size of the city should be at least twice
    the factorial being computed. So the city should be 20 by 20 for the best viewing of the
    factorial of 10 being computed. </font></dd>
  <dt><font face="Comic Sans MS" size="3"><a href="../spinner.tt">A spinning person</a>. </font></dt>
  <dd><font face="Comic Sans MS" size="3">This one a just a picture of a person spinning
    around. On the back is a robot that just repeatedly adds one to a parameter that controls
    which way she is facing. </font></dd>
  <dt><font face="Comic Sans MS" size="3"><a href="../movies.tt">Chase movies.</a> </font></dt>
  <dd><font face="Comic Sans MS" size="3">This uses the behavior notebook below to make 4
    movies. The first one just has 2 characters bouncing off the edges. The second adds
    reversing on collision to the oval. The third one gives the oval the goal of moving to the
    center and also imposes a speed limit on it. The fourth gives the square the behavior of
    chasing the oval. It also gets a speed limit. </font></dd>
  <dt><small><a name="Behaviors"></a></small><font face="Comic Sans MS" size="3"><b>Neat
    behaviors.</b> </font></dt>
  <dd><font face="Comic Sans MS" size="3">The chase movies were made by placing different
    behaviors on the back of geometric shapes. These behaviors were built in ToonTalk. They
    include drift towards a goal, bounce off edges, obey speed limit, chase another, and more
    and can be found in <a href="../behave.tt">this notebook</a>. There are plenty more
    behaviors <a href="http://www.ioe.ac.uk/playground/TTLibrary/completelist.htm">here</a>
    where they are called &quot;anima-gadgets&quot;.</font></dd>
  <dt><font face="Comic Sans MS" size="3"><a href="../gates.tt">Logic gates.</a> </font></dt>
  <dd><font face="Comic Sans MS" size="3"><a name="LogicGates">This was posted by Tyler
    Breisacher (age 11) who wrote the following. Recently I've been getting interested in
    Digital Electronics. I decided to see if I could train robots to act like a logic gate.
    You'll notice the robots get input from nests give output to birds. This is so that robots
    can deliver data to other robots which is critical in making a logical circuit. As I make
    circuits from these gates I will post some. I also need to make 3 and 4 input And/Or/Ex-Or
    gates. I think this is a good use for birds/nests and for the discussion group. Feel free
    to make logic circuits with these.</a> </font></dd>
  <dt><font face="Comic Sans MS" size="3"><b>Plays music.</b> </font></dt>
  <dd><font face="Comic Sans MS" size="3">ToonTalk can send messages to Microsoft Window's
    Media Control Interface (MCI). A cute example is <a href="../canyon.tt">Play Canyon</a>
    that has a picture of a switch. On the back is a robot who will play the file
    &quot;canyon.mid&quot; from the Windows directory when the switch is on and it is on the
    floor. (Note this example expects to find the file
  <a href="file:///c:/windows/media/town.mid">c:/windows/media/town.mid</a> and will fail
    on Windows 2000 or NT 4, but it is not hard to edit to work.)</font></dd>
  <dt><a href="../tictacto.tt"><font face="Comic Sans MS" size="3">TicTacToe.</font></a></dt>
  <dd><font face="Comic Sans MS" size="3">This lets 2 players play TicTacToe. You need to hide
    your hand (using F9) for the game to work. 'e' will erase the game to start again. It was
    contributed by</font><font face="Comic Sans MS"><font size="3"> </font>Pierre-André
    Dreyfuss.</font></dd>
  <dt><a href="../express.tt"><font face="Comic Sans MS">Arithmetic expression evaluator.</font></a></dt>
  <dd><font face="Comic Sans MS">This was </font><font face="Comic Sans MS" size="3">contributed
    by</font><font face="Comic Sans MS"><font size="3"> </font>Pierre-André Dreyfuss who
    wrote the following. The team wants a box with two holes. An expression in the left one
    and a bird for the answer in the right one. An operation is a box with three holes. In the
    middle one of the operators + - x / on a word pad. Left and right : a number. An
    expression is a three holes box, with an operator in the middle and both sides either a
    number, or an operation, or an expression. The four first robots are computing operation.
    The last three are dealing with expressions, in the&nbsp; left hole, in the right hole and
    both sides, calling themselves recursively using the main book and<br>
    the 'oper' label for search. </font></dd>
  <dd><font face="Comic Sans MS">This program is recursive. Note <font size="3">that s</font></font><font
    face="Comic Sans MS" size="3">tarting with Beta 23 or Release 2.10, there is an easier way
    to express recursion. A robot can now <a href="wand.htm#RobotCopying">use the magic wand
    to create a copy of himself</a> and his teammates.</font><br>
    &nbsp;&nbsp; </dd>
</dl>

<p><font face="Comic Sans MS">There are plenty more examples including lots of games to be
found at <a href="playgrnd.htm">the Playground Project Game Place</a>.</font></p>

<p align="center"><small><font face="Comic Sans MS"><a href="toontalk.htm">
home</a> | <a href="search.htm">search</a> | <a href="buy.htm">purchase</a> | <a href="doc.htm">
manual</a> | <a href="whatsnew.htm">news</a> | <a href="infodesk.htm">info</a> | <a href="games.htm">
games</a> | <a href="faq.htm">faq</a> | <a href="support.htm">support</a> | <a href="free.htm">
downloads</a> | <a href="endorse.htm">endorsements</a> | <a href="press.htm">
press</a> | <a href="address.htm">contact us</a></font></small></p>
</body>
</html>