<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1252">
<META NAME="Generator" CONTENT="Microsoft Word 97">
<TITLE>Children’s Software: Past, Present, and Future - GDC2000 Roundtables</TITLE>
<META NAME="Template" CONTENT="C:\Program Files\Microsoft Office\Office\html.dot">
</HEAD>
<BODY LINK="#0000ff" VLINK="#800080">

<B><FONT FACE="Comic Sans MS" SIZE=4><P ALIGN="CENTER">Children’s Software: Past, Present, and Future</P>
</B></FONT><FONT FACE="Comic Sans MS"><P ALIGN="JUSTIFY">This is a summary of the three roundtable discussions at the Game Developers Conference Moderated by Ken Kahn (KenKahn@ToonTalk.com). For each session, a one-page handout was given to each participant (appended to the end of this document). Everyone briefly introduced themselves before the discussion began. I then explained that the goal of the discussion was to share ideas about where children’s software is going by looking at the past and present.</P>
<B><P ALIGN="JUSTIFY">March 10, 2000. </P>
</B><P ALIGN="JUSTIFY">This discussion began with topic of software that is appropriate for a very wide range of ages versus age specific software. Someone reported that he has been using Studio Max 3D quite successfully with 9 to 16 year olds. Children, when motivated, will take the effort to master complex software with a complex interface. Someone else related how they had recently seen Disney’s Peter Pan and found it a good example of media that appeals to all – from small children to adults. Another participant pointed out that when the software has an educational purpose it needs to have a narrower age range. Someone else said that the only important difference between the interests of children and adults is that children aren’t interested in sex.</P>
<P ALIGN="JUSTIFY">Someone said the games they like have complex and sophisticated interfaces, so aren’t appropriate for children. Another countered that designers should strive for simpler interfaces since it benefits all.</P>
<P ALIGN="JUSTIFY">It was pointed out that for young children that reading ability can’t be relied upon. Someone added that software (like HomeWorld) has instructions that explain things and are read to you. Someone else asked what was known about the use of icons versus words. Another replied that kid testing was critical since kids always surprise you both in how much they can do and in simple things that cause them problems. Another said you should always provide stuff this is harder than the child’s level so more ambitious or capable kids can go further. Another suggested that kids can be monitored by the software and helped when appropriate. Someone countered that there is the danger of providing too much help so the kids depend upon the help rather than think or explore for themselves. Another brought up different learning styles.</P>
<P ALIGN="JUSTIFY">Someone claimed that kids don’t care about rules and goals but use software, including games, as they decide. Another quoted Will Wright the author of SimCity on the topic of basketballs. One can give a basketball lesson explaining how to shot and dribble it or one can give it to someone and say here’s a ball. In former case it is a game with rules and the latter it is a toy. Someone else said that when kids gets stuck they build their own games [within another game]. Another claimed that SimAnt is the best of both – it is both a game and a toy. When he was in third grade he just explored and used it like a toy. And then he find out that the ants are in a yard and you can try to achieve the goal of taking over the yard. He also said that 2 years later he looked at the manual and saw how much science was underlying the game. He learned a lot from the game and its manual (2 years later). Another described how kids use Lucas Learning’s DroidWorks as a toy as well as a game. Some kids just like building droids and having them do things and ignore the missions. Another said how she liked to just build neat cities in Pharoes when she doesn’t feel like doing missions. Another said the same was true of Caesar. </P>
<P ALIGN="JUSTIFY">Another warned that we shouldn’t look at kids as "one big crowd" – look at board games that are adapted to different age groups. Another said that some titles are boring for kids over 8 – Living Books for example. [See March 11 discussion for more on this.] Someone asked with this need be the case. Couldn’t it have Simpson-like (broad age range) appeal?</P>
<P ALIGN="JUSTIFY">On the topic of gender specific titles someone said one should look at whether the game as language versus movement and action versus narrative. Another said that Mario Brothers works so well because the player is rewarded occasionally and has the feeling of being successful. Someone pointed out that Tom Malone’s thesis from 1982 [Stanford University] said all this back then. [I’ve read it and agree and recommend it.] Another said that some kids want competition and some don’t care about winning and losing. Kids need to set goals as well as be given goals.</P>
<P ALIGN="JUSTIFY">On the topic of kids making their own games someone pointed out how with Dungeons and Dragons there is always some kid who wants to be the leader and set the rules. Another pointed out that Carmen San Diego Quick Think Challenge has a content editor. This was put in for teachers but kids have discovered and are really into changing the content of this quiz game.</P>
<B><P>March 11</P>
</B><P ALIGN="JUSTIFY">The first comment was that if note pads were added to games that children would learn why to keep notes in school. [Some games like Carmen San Diego do this.] The next comment was that kids software was a "smaller universe" than the game software market and hence has to make do with fewer resources. And needs to compete against the better funded games.</P>
<P ALIGN="JUSTIFY">On the topic of age specific software someone pointed out that toys are very age specific. Another countered that some toys like LEGOs aren’t. </P>
<P ALIGN="JUSTIFY">The originator of Living Books [sorry I forget his name] was asked why it was claimed [in the discussion on March 10] that Living Books are boring for children over 8 and whether they could have had a wide appeal. He answered that Living Books give a sense of control and power. This is especially important for autistic children. Older children want more control than just clicking.</P>
<P ALIGN="JUSTIFY">Someone claimed that You Don’t Know Jack can teach anything because of its pacing and the way it moves users via humor. Another noted that Carmen San Diego was never marketed as "educational". Another pointed out how children are learning about a whole universe in playing with Pokeman. Someone claimed that kids want to feel powerful and enjoy aggregating knowledge. They get confidence in acquiring knowledge and generalizing when playing such games.</P>
<P ALIGN="JUSTIFY">Someone brought up a point that Amy Bruckman made in a different session at the conference when she referred to edutainment software as chocolate covered broccoli. They went to say they agreed that free play or construction is great but also there is a role for training. And how can one measure the result in free play? We need lots of kinds of games and each genre shouldn’t bash the others. Someone pointed out that in some software there is "stealth learning".</P>
<P ALIGN="JUSTIFY">Someone said that kids should be playing with the rules. There are different levels and the low-level rules are fixed. At higher levels the designer’s intentions are often broken by users. Someone agreed by pointing out that on SimCity 3000 web sites players have posted things that are more like art, design, or cesspools and not city-like at all. Another gave an example of users of Books That Work who design stairways that are more Escher-like than the functional stairs intended by the designers of the software.</P>
<P ALIGN="JUSTIFY">On the topic of current software containing new ideas someone argued that Lucas Learning’s DroidWorks is full of new ideas and "is the most innovative in years". And it is worth noting that such an innovative title came from a privately funded company. Someone pointed out the marketing difficulties that DroidWorks had. It couldn’t compete as entertainment and yet marketing it as educational turns off many potential customers. The idea was presented that kids should get one message while adults another. Like the sign on above the top shelf at Toys R Us that said "Learning Products".</P>
<P ALIGN="JUSTIFY">Someone described their work on neuro-feedback which used EEG signals as input to the "game". The kids enjoy it for what it is while the web site makes it clear to the parents how much is being learned. And the web can give background knowledge.</P>
<P ALIGN="JUSTIFY">Another pointed out that intelligent toys (those linked to computers) means that even younger children can use software. Another countered that computer-based software is well understood and there is lots of re-invention that will be necessary for new input devices and game consoles. Someone replied it depends upon if your goal is play or education. And kids want the newest things (console or cool thing) so build upon it despite the risk.</P>
<P ALIGN="JUSTIFY">Someone asked why software doesn’t tutor its users. Another stated that very good tutoring software has been built at Carnegie Mellon University (http://www.hcii.cmu.edu/Research/Projects/AdvancedComputerTutoring.html). Someone else said he worked on a good product – Microsoft Tutor for 1st and 2nd graders – and it didn’t catch on. Was it a marketing failure or something else?</P>
<P ALIGN="JUSTIFY">Someone claimed that school principals make most software buying decisions and they care about improving test scores. Someone asked in response about software that was "kid-driven" versus parent or school. People suggested Pokeman and LEGO Mindstorms. A few people discussed how Age of Empires is very kid driven. It is a big middle school hit. And there was no need to "dummy it down" for that age group. Another pointed out that it makes learning the real point of history and it becomes interesting in the context of games like Age of Empires. Most agreed despite the historical inaccuracies in the game introduced to improve game play.</P>
<P ALIGN="JUSTIFY">Another response to the claim it is principals who make the purchasing decisions, someone said that special needs teachers in the UK became knowledgeable and have a tighter community and hence know good software and knows what they want.</P>
<B><P ALIGN="JUSTIFY">March 12</P>
</B><P ALIGN="JUSTIFY">I started this session by asking how many had heard Danny Hillis’ keynote the night before. About 20% had so I summarized it and used it to spark the discussion. Someone said they like his nutritional model that argued for a variety of software. Danny said violent games are like potato chips – OK to eat but not as the main course. They also liked his view of games providing kids with conceptual models. This is in contrast to Amy Bruckman who has a hierarchy of good versus bad software that is really whether the software is open versus closed or didactic. </P>
<P ALIGN="JUSTIFY">Someone claimed that kids like repetitive things.</P>
<P ALIGN="JUSTIFY">Another said one should evaluate user interfaces relative to crayons and dolls which kids have no problem "using".</P>
<P ALIGN="JUSTIFY">Another said kids software should get to know the user in line with David Perry’s talk the day before.</P>
<P ALIGN="JUSTIFY">Someone claimed that school curriculum holds things back. If it was based upon computers it would be very different. Another agreed and said that the curriculum is based upon standardized tests and they don’t encourage creativity and exploration. Someone said that LOGO is still great while today people are drawn to slick software. Someone replied that in third grade they had LOGO and Basic and the LOGO was oversimplified and he and his friends were ready for the complexity of Basic.</P>
<P ALIGN="JUSTIFY">Another said that new interfaces were great but that kids can learn complexity. A good book on this is "Computer Science Unplugged" published by Mega Math.</P>
<P ALIGN="JUSTIFY">Another said that edutainment was as Danny Hillis said "picking the low hanging fruit" and we should try to strive for harder things. Someone responded that the mass market is only for simple stuff.</P>
<P ALIGN="JUSTIFY">Someone said home schooling includes both curriculum-based activities and self-guided large project work.</P>
<P ALIGN="JUSTIFY">Another said that software is only as strong as the context it is used in. Another said that algebra for 4th graders worked as a Socratic method. But it was an uphill battle for creative open-ended activities since they take a long time to master.</P>
<P ALIGN="JUSTIFY">Another said that the users of KidPix have a wide age range. Someone countered that the trend is towards narrower age ranges. Another countered that tools can be broad age appropriate. Someone said that NPR’s Chin Walk Theatre is a radio show for children but half its listeners are adults without children. Someone responded that the content must be authentic. Another said that sugar-coated curriculum is not authentic and what is needed are games based on worlds with real physics. Someone said that DroidWorks has science so well-integrated that the players are learning without knowing it and it works very well and adults like it.</P>
<P ALIGN="JUSTIFY">Someone remarked that Super Mario Brothers works for all ages.</P>
<P ALIGN="JUSTIFY">Someone asked how to create the market for things like DroidWorks. And another asked how to support old machines and system. And another asked how to convince parents to buy software like DroidWorks. [It is interesting that DroidWorks came up every session as a positive example of what kids software should be like.]</P>
<P ALIGN="JUSTIFY">Someone replied that they had worked on Tetris for Kids. And parents were still confused about how to set it up and get it started. People replied that it must be simpler for parents – both what it does and what the point is. Another said that parents don’t care. Another replied that they do care but are ignorant.</P>
<P ALIGN="JUSTIFY">Someone else suggested that the solution (which his company was pursuing) was to sneak creative and open-ended activities into curriculum-based software.</P>
<P ALIGN="JUSTIFY">Someone else asked why not develop for consoles. Another replied that their company tried several years ago and it didn’t sell well. Another commented that maybe it is time to try again. Someone pointed out that most families have valuable data on their PCs (e.g. tax info) and worry about their kids messing things up. Consoles are better for kids to run unsupervised. Another added that console stuff must be fun since it is a kid driven choice. Someone replied that if consoles had educational software it might be chosen.</P>
<P ALIGN="JUSTIFY">Someone pointed out that older machines go to younger kids so this is a good opportunity to port the current PlayStation and the like. The timing is right now. Someone said their company was developing Tele Tubbies titles (interesting exploratory titles) for the PlayStation. Someone noted that titles must be re-designed for consoles – not simply ported. Consoles are better since they are in the living room or kids room which is better for kids. Another pointed out the problem that consoles have the image of being about shooters and arcade titles. Someone said that kids have high expectations for console games. Another said that 4 or 5 year olds are open minded on this.</P>
<P ALIGN="JUSTIFY">&nbsp;</P>
<P ALIGN="JUSTIFY">&nbsp;</P>
<P>&nbsp;</P>
</FONT><B><FONT FACE="Comic Sans MS" SIZE=4><P ALIGN="CENTER">&nbsp;</P>
<P ALIGN="CENTER">Children’s Software: Past, Present, and Future</P>
</B></FONT><FONT FACE="Comic Sans MS"><P ALIGN="CENTER">Moderated by Ken Kahn (KenKahn@ToonTalk.com)</P>
<OL>

<LI>What have been the significant advances in software for children? </LI></OL>


<UL>

<UL>
<LI>What software from the past can we learn from? (KidPix, LOGO, Carmen San Diego, Super Mario Brothers, Living Books, ...)</LI></UL>
</UL>

<OL>

<LI>What is the current state of the art in the design of children's software? </LI></OL>


<UL>

<UL>
<LI>Are there new ideas or "only" better technology?</LI></UL>
</UL>

<OL>

<LI>What will children's software be like in the near and far future?</LI></OL>


<UL>

<UL>
<LI>Speech input and output </LI>
<LI>Gesture recognition </LI>
<LI>Virtual reality </LI>
<LI>"Intelligent" tutors, guides, and coaches </LI>
<LI>New kinds of software?</LI></UL>
</UL>

<OL>

<LI>Will new hardware change the nature of software for children?</LI></OL>


<UL>

<UL>
<LI>Mixed physical and virtual (e.g. Zowie or Microsoft Barney) </LI>
<LI>Robotics (e.g. LEGO Mindstorms) </LI>
<LI>Intelligent toys (as input/output devices or as stand-alone applications)</LI></UL>
</UL>

<OL>

<LI>Should software be designed specifically for children or should we strive for software that appeals to both children and adults?</LI></OL>


<UL>

<UL>
<LI>Movies like Snow White, Wizard of Oz, and Star Wars </LI>
<LI>Music? </LI>
<LI>Disneyland?</LI></UL>
</UL>

<OL>

<LI>If we do design software specifically for children should we specialize the software for narrow age ranges or a single gender?</LI>
<LI>Finally, where, if at all, does software made by children fit into the big picture?</LI></OL>


<UL>

<UL>
<LI>Stagecast Creator (</FONT><A HREF="http://www.stagecast.com">www.stagecast.com</A><FONT FACE="Comic Sans MS">) </LI>
<LI>ToonTalk (</FONT><A HREF="http://www.toontalk.com">www.toontalk.com</A><FONT FACE="Comic Sans MS">) </LI>
<LI>LEGO Mindstorms RCX (</FONT><A HREF="http://www.mindstorms.com">www.mindstorms.com</A><FONT FACE="Comic Sans MS">) </LI>
<LI>LOGO (</FONT><A HREF="http://el.www.media.mit.edu/groups/logo-foundation">el.www.media.mit.edu/groups/logo-foundation</A><FONT FACE="Comic Sans MS">) </LI>
<LI>Playground Project (</FONT><A HREF="http://www.ioe.ac.uk/playground">www.ioe.ac.uk/playground</A><FONT FACE="Comic Sans MS">)</LI></UL>
</UL>

</FONT><P>&nbsp;</P></BODY>
</HTML>
