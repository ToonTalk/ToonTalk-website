<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name="Template" content="C:\PROGRAM FILES\MICROSOFT OFFICE\OFFICE\html.dot">
<meta name="GENERATOR" content="Microsoft FrontPage 5.0">
<title>Endorsements from ToonTalk users, teachers, and researchers</title>
</head>

<body link="#0000FF" vlink="#800080">

<p><font face="Comic Sans MS" size="4"><i>ToonTalk has won a few awards 
including
<a href="http://www.parents-choice.org/product.cfm?product_id=5054&award=AW&from=Fall 2001 Parents' Choice Award Winners &urllist=4840,5054,6321,6136,6135,5570,5867&fromurl=awards.cfm?cat_code=c_sof&award=AW&awdyr=2001&awdse=b&product_code=p_sof">
Parents’ Choice Gold Award,</a>
<a href="http://www.drtoy.org/2002_v/vac2002_6.html">Dr. Toy's 2002 Best 
Vacation Children's Product Award</a>, and ZDNET 5-star editors choice.</i></font><font FACE="Comic Sans MS" size="5"><strong> </strong></font>
<OBJECT id=AgentControl codeBase=#VERSION=2,0,0,0 classid=clsid:D45FD31B-5C6E-11D1-9EC1-00C04FD7081F VIEWASTEXT></OBJECT>

<SCRIPT language=javascript src="../agent.js"></SCRIPT>
<SCRIPT language=javascript src="strings.js"></SCRIPT>
<SCRIPT language=JavaScript event="Click(CharacterID, Button, Shift, X, Y)" for=AgentControl> 

<!-- 

reactToAgentClicked(CharacterID, Button, Shift, X, Y); 

--> </SCRIPT><SCRIPT language=JavaScript event=IdleStart(CharacterID) for=AgentControl> 

<!-- 

idleAgent(CharacterID); 

--> 

</SCRIPT>
<INPUT onclick=agentStart() type=image alt="Peedy can read this page for you." src="../reading.gif" name=Image1 width="58" height="51"></p>

<p align="center"><font face="Comic Sans MS"><img src="../rainbow.gif" width="623" height="6"></font></p>

<p><font face="Comic Sans MS"><i>These are email messages we've received from ToonTalk
users, teachers, and researchers.</i></font></p>

<p align="center"><font face="Comic Sans MS"><img src="../rainbow.gif" width="623" height="6"></font></p>

<blockquote>
  <p><font face="Comic Sans MS"><em>ToonTalk is the most radical vision I've seen of what
  the future of programming for kids could be like. It combines the fun and excitement of
  video games with some of the most powerful ideas in computer science.</em></font></p>
  <blockquote>
    <p><font face="Comic Sans MS">Henry Lieberman<br>
    Research Scientist, Media Lab, Massachusetts Institute of Technology </font></p>
  </blockquote>
</blockquote>

<p align="center"><font face="Comic Sans MS">&nbsp;<img src="../rainbow.gif" width="623" height="6"></font></p>

<blockquote>
  <p><em><font face="Comic Sans MS">Well, I think it's been a wonderful experience for these
  children. They've learned all sorts of things from it. Obviously the programming that
  they've done is at an amazing level for children at this age, and they've done it almost
  seamlessly without really realising that they were getting engaged in some really advanced
  thinking. I think their problem solving skills have developed enormously from it and
  they've really enjoyed it.</font></em></p>
  <blockquote>
    <p><font face="Comic Sans MS">Head teacher in London </font></p>
  </blockquote>
</blockquote>

<p align="center"><font face="Comic Sans MS"><img src="../rainbow.gif" width="623" height="6"></font></p>

<blockquote>
  <p><font face="Comic Sans MS"><em>ToonTalk has helped me to understand many complex
  theoretical aspects of computer science programming language research, through its use of
  animated visualisations.<br>
  <br>
  As a programmer with 20 years of experience of programming computers, using ToonTalk has
  helped me to get an in-depth understanding of many of the difficult problems of concurrent
  programming and the possible solutions to these problems.<br>
  <br>
  Using ToonTalk together with children has given me a new understanding of how children
  think about computers and programming.<br>
  <br>
  My experience with children is that concrete animations seem to be extremely helpful for
  their understanding of how programming works</em>.</font></p>
  <blockquote>
    <p><font face="Comic Sans MS">Mikael Kindborg<br>
    Graduate student, Linköping University, Sweden </font></p>
  </blockquote>
</blockquote>

<p align="center"><font face="Comic Sans MS">&nbsp;<img src="../rainbow.gif" width="623" height="6"></font></p>

<blockquote>
  <p><font face="Comic Sans MS"><em>As part of my Ph.D. research, I have been conducting
  ToonTalk sessions with kindergarten kids, ages 3 to 5. A most delightful moment came right
  at the start: my wife has been doing computer sessions in kindergartens and private
  schools since 1997, and she has quite a gift for children, and a knack at guessing what
  they will like and dislike. However, when she looked at ToonTalk, she thought kids
  wouldn't like it. I suggested a trial, and to her astonishment, the kids LOVE it! When I
  started my ToonTalk sessions, the coordinator of the course for pre-school education
  teachers thought that 10 to 15 minutes would be adequate, in view of the kids' attention
  span on other computer activities. However, the kids kept requesting longer sessions. I
  was soon conducting 30 and 40 minutes sessions. And nowadays, after 1-hour sessions they
  usually ask, when I'm leaving the kindergarten, if they can continue playing ToonTalk even
  after I leave. </em></font></p>
  <p><font face="Comic Sans MS"><em>On their own, they use it for all sorts of things:
  endless repetition, to create things like &quot;birds attending a mass&quot; or &quot;a
  birds army&quot;, they create huge arrays of boxes &quot;to store all my toys&quot;, they
  teach robots endless, pointless, sequences of actions, delighted that the robot &quot;is
  being taught&quot;. </em></font></p>
  <p><font face="Comic Sans MS"><em>My research concerns analysis and discovery of the
  issues around kids this young doing programming. Just yesterday, two kids on their 3rd TT
  session demonstrated an incredible ease, while programming a house-building robot (their
  first robot). But like all kids, they think little of making them work. When asked
  &quot;are you sure your robot learned well how to build houses?&quot;, one even replied
  &quot;For sure&quot;, without even testing it. </em></font></p>
  <p><font face="Comic Sans MS"><em>Future kindergarten teachers are now learning TT at the
  local university. While for now most of their proposed activities are just traditional
  games, who knows what a large number of more computer-literate education professional may
  come up with in the future? </em></font></p>
  <blockquote>
    <p><font face="Comic Sans MS">Leonel Morgado <br>
    Graduate student UTAD, Vila Real, Portugal </font></p>
  </blockquote>
</blockquote>

<p align="center"><font face="Comic Sans MS"><img src="../rainbow.gif" width="623" height="6"></font></p>

<blockquote>
  <p><font face="Comic Sans MS"><em>In the mid nineties I was brought to a small group of
  computer science researchers and teachers. We were taken to a scrubby room in the basement
  of the Teachers' College in Stockholm. I had received an award for IT teacher of the year
  a few weeks earlier and some people thought I should see TT and meet Ken Kahn. </em></font></p>
  <p><font face="Comic Sans MS"><em>As a teacher I realized immediately that TT would be the
  next step in learning. By programming in this playful way kids would get access to their
  inner wealth of mental creativity. Later a six year old TT user told me that the best
  thing about TT is that it helps him think and make use of his imagination. </em></font></p>
  <p><font face="Comic Sans MS"><em>I have checked the market for similar computer tools for
  thinking and realized that TT is absolutely unique, one of a kind. At that it is
  relatively independent of local cultures and language. As I see it, TT has the potential
  of unleashing the hidden treasure of mental creativity of billions of kids in developing
  countries like nothing else. </em></font></p>
  <p><font face="Comic Sans MS"><em>Another thing I like about TT is that it is equally
  challenging to both kids and grown ups. This makes TT programming an excellent way of
  having fun and creating together. I have had the opportunity to do TT work with six and
  seven year olds. It has been interesting for me to realize how we lost our concepts of
  being separated by age and experience. TT provided a playground that was fresh to all of
  us and made us equal as co-creators.</em></font></p>
  <blockquote>
    <p><font face="Comic Sans MS">Lennart Mogren<br>
    Educational researcher and former school teacher, Sweden</font></p>
  </blockquote>
</blockquote>

<p align="center"><font face="Comic Sans MS"><img src="../rainbow.gif" width="623" height="6"></font></p>

<blockquote>
  <p><font face="Comic Sans MS"><em>Using ToonTalk as a platform has shown us that even
  quite young children can recognise that they can build objects from scratch (by training
  robots), combine, generalise and debug. More generally, they can come to think about
  mechanisms - how things work, why they work, how they can be rebuilt. In the twenty-first
  century, where the opportunity to strip down working systems with spanners and
  screwdrivers are much more limited than they were, we will need to consider virtual
  alternatives, ways for children to take things to pieces, look at what makes them tick,
  and put them back together. </em></font></p>
  <p><font face="Comic Sans MS"><em>There are not many examples of computational worlds
  which afford interesting and creative directions for children to learn mathematical ideas
  and which provide an entree into the world of formal systems which child-programming has
  always tried to offer. The set of tools and metaphors appropriate for navigating around at
  the interface level were not functional below that level - to get below, one had to enter
  a new world of arcane (usually textual) difficulty. ToonTalk has changed that.</em></font></p>
  <blockquote>
    <p><font face="Comic Sans MS">Richard Noss and Celia Hoyles<br>
    Professors of Education, Institute of Education, University of London, UK </font></p>
  </blockquote>
</blockquote>

<p align="center"><font face="Comic Sans MS"><img src="../rainbow.gif" width="623" height="6"></font></p>

<blockquote>
  <p><font face="Comic Sans MS"><em>I used ToonTalk in a research project that investigated
  how children with learning disabilities versus those who do not might approach computer
  problem-solving tasks differently. The project required a high interest software program
  that included hierarchically organized problems and assistance. ToonTalk was ideal. The
  free play component was used to introduce the characters and basic program manipulatives
  to the children, while the puzzle tasks provided the kinds of problems and
  &quot;virtual&quot; assistance that I was looking for.<br>
  <br>
  The ToonTalk web site was a real boon. I used this to play with the program before
  purchasing it, and referred children to it after the study. This was necessary because,
  while the study ended, the children were not finished with ToonTalk! They found it
  challenging and fun. Unlike other software designed for children, ToonTalk is open ended.
  Once the children knew how to handle the operations, they could create. Rather than being
  throw away software, children become dynamic with it as their understanding and skill
  builds. The children in this study loved the characters, the kinds of activities, and the
  mental workout that ToonTalk provided. ToonTalk also served as a way to involve children
  and adults in authentic conversation. Training the robot is challenging for adults as well
  as children. In our study the adults (research assistants) and children both had something
  to offer the other in moving through the program, and both felt a sense accomplishment
  when they jointly succeeded in helping Marty. ToonTalk is an outstanding program for
  school-aged children. It doesn't have glitz; it has the intellectual gusto that children
  crave. It motivates them! </em></font></p>
  <blockquote>
    <p><font face="Comic Sans MS">Fran Hagstrom, Ph.D.<br>
    Assistant Professor, Department of Communication Disorders, University of Houston, Texas </p>
  </blockquote>
</blockquote>
</font>

<p align="center"><font face="Comic Sans MS"><img src="../rainbow.gif" width="623" height="6"></font></p>

<blockquote>
  <p><font face="Comic Sans MS"><em>I am using ToonTalk with kids 12 years old in public
  school in Geneva Switzerland in a computer science course, one hour a week. First kids are
  learning by themselves using the play game mode which is translated in French. Then they
  are using free play eliminating the help which is in English, but asking questions to the
  teacher. We have all the kids ending mandatory school (at age of 15 years old). We have
  classes of kids which will go on learning college and university and classes of kids which
  will be worker and get a job. </em></font></p>
  <p><font face="Comic Sans MS"><em>ToonTalk, with animated programming give a way to kids
  that have difficulties with textual matter to program and use procedural mind instead of
  semantic. Using MSWLogo and ToonTalk, it seems that Logo and textual programming suits
  better to kids that will make long study and ToonTalk to kids that prefer doing things
  than speaking about things. </em></font></p>
  <p><font face="Comic Sans MS"><em>This year we have built with ToonTalk a chat system
  using birds flying from computer to computer.&nbsp; Putting all the robots in the same
  house, just seeing the robots at work give a demonstration of how the messages are running
  from the sender to the receivers. </em></font></p>
  <p><font face="Comic Sans MS"><em>I am working on the use of computers for CAI. With the
  play game mode and the possibility for a teacher to build puzzles, toontalk offers a way
  to make CAI based on constructivism. </em></font></p>
  <p><font face="Comic Sans MS"><em>I am working on puzzles teaching math expressions, using
  boxes to represent operations and boxes in boxes to represent operation within operations.
  For instance 3 * 4 + 5 will be [ [ 3 | * | 4]| + | 5] but 3 * (4 + 5) will be [3|*|[4|+|5]
  ].&nbsp; For instance: [ | | ] represent a box with 3 holes.</em></font></p>
  <blockquote>
    <p><font face="Comic Sans MS">Pierre-Andre Dreyfuss<br>
    School teacher in Geneva, Switzerland </font></p>
  </blockquote>
</blockquote>

<p align="center"><font face="Comic Sans MS"><img src="../rainbow.gif" width="623" height="6"></font></p>

<p align="left"><font face="Comic Sans MS">There are many more comments from users <a href="users.htm">here</a>.</font></p>

<font
FACE="Comic Sans MS" SIZE="3">
</font>

<p id="DontRead" align="center"><small><font face="Comic Sans MS"><a href="toontalk.htm">home</a> | <a href="search.htm">search</a> | <a href="buy.htm">purchase</a> | <a href="doc.htm">manual</a>
| <a href="whatsnew.htm">news</a> | <a href="infodesk.htm">info</a> | <a href="games.htm">games</a>
| <a href="faq.htm">faq</a> | <a href="support.htm">support</a> | <a href="free.htm">downloads</a>
| <a href="endorse.htm">endorsements</a> | <a href="press.htm">press</a> | <a href="address.htm">contact us</a></font></small></p>
</body>
</html>