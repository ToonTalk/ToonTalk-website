<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 3.0">
<title>Abstract of paper on ToonTalk and Systolic Programming </title>
</head>

<body bgcolor="#FFFFFF" text="#000000">

<p align="center"><font size="4">Seeing Systolic Computations in a Video Game World</font>
</p>

<p align="center">Ken Kahn<i> </i></p>

<p><i>ToonTalk is a general-purpose concurrent programming system in which the source code
is animated and the programming environment is like a video game. Every abstract
computational aspect is mapped into a concrete metaphor. For example, a computation is a
city, an active object or agent is a house, inter-process communication represented by
birds carrying messages between houses, a method or clause is a robot trained by the user
and so on. The programmer controls a &quot;programmer persona&quot; in this video world to
construct, run, observe, debug, and modify programs.</i> </p>

<p><i>ToonTalk has been described in detail elsewhere. Here we show how systolic programs
can be constructed and animated in ToonTalk. Systolic computations run on multiple
processors connected in a regular topology, where all communication is via local message
passing. A ToonTalk city can be seen as a systolic multi-processor and each house in the
city as an active processor. One is able to construct systolic algorithms and watch their
execution as houses are built and destroyed (i.e., processes are spawned and terminate)
and birds carry messages between houses.</i></p>

<p align="center"><small><font face="Comic Sans MS"><a href="toontalk.htm">home</a> | <a href="toontalk.htm#search">search</a> | <a href="buy.htm">buy</a> | <a href="doc.htm">manual</a>
| <a href="whatsnew.htm">news</a> | <a href="faq.htm">faq</a> | <a href="trouble.htm">support</a>
| <a href="press.htm">press</a> | <a href="address.htm">contact us</a></font></small></p>
</body>
</html>
